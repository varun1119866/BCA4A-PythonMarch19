Practical-5

(5.1)

def main():
    my_list = [1, 2, 3, 4, 5]
    print("Original list:", my_list)
    print("First element:", my_list[0])
    print("Last element:", my_list[-1])
    print("Sliced list:", my_list[1:4])
    my_list[2] = 6
    print("Modified list:", my_list)
    my_list.append(7)
    print("List after appending 7:", my_list)
    my_list.remove(4)
    print("List after removing 4:", my_list)
    print("Iterating over the list:")
    for num in my_list:
        print(num)
    if 3 in my_list:
        print("3 is in the list.")
    else:
        print("3 is not in the list.")

if _name_ == "_main_":
    main()

(5.2)

def main():
    my_list = ['q', 'w', 'e', 'r', 't', 'y']

    
    for i, elem in enumerate(my_list):
        print(f"Element: {elem}, Positive Index: {i}, Negative Index: {i - len(my_list)}")

if _name_ == "_main_":
    main()

(5.3)

def main():
    my_list = [1, 2, 3, 4, 5]
    my_list.append(6)
    print("List after appending 6:", my_list)
    my_list.insert(2, 10)
    print("List after inserting 10 at index 2:", my_list)
    my_list.remove(3)
    print("List after removing 3:", my_list)
    popped_element = my_list.pop()
    print("Popped element:", popped_element)
    print("List after popping the last element:", my_list)
    index = my_list.index(4)
    print("Index of 4 in the list:", index)
    count = my_list.count(2)
    print("Count of 2 in the list:", count)
    my_list.sort()
    print("Sorted list:", my_list)
    my_list.reverse()
    print("Reversed list:", my_list)
    copied_list = my_list.copy()
    print("Copied list:", copied_list)

if _name_ == "_main_":
    main()

(5.4)

def main():
    
    matrix = [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]
    ]

    
    print("Matrix:")
    for row in matrix:
        print(row)

    
    print("\nIndividual elements:")
    for i in range(3):
        for j in range(3):
            print(f"Element at position ({i+1}, {j+1}): {matrix[i][j]}")

if _name_ == "_main_":
    main()

(5.5)

def main():
    my_list = [3, 1, 2, 5, 4]
    print("Original list:", my_list)
    print("Length of the list:", len(my_list))
    print("Maximum element:", max(my_list))
    print("Minimum element:", min(my_list))
    print("Sum of elements:", sum(my_list))
    my_list.sort()
    print("Sorted list:", my_list)
    my_list.reverse()
    print("Reversed list:", my_list)

if _name_ == "_main_":
    main()


(5.6)

import statistics

def main():
    numbers = [10, 20, 30, 40, 50]
    mean = statistics.mean(numbers)
    print("Mean:", mean)
    variance = statistics.variance(numbers)
    print("Variance:", variance)
    std_deviation = statistics.stdev(numbers)
    print("Standard deviation:", std_deviation)

if _name_ == "_main_":
    main()

